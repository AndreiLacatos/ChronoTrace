using System.Text;
using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.CSharp.Syntax;
using static System.String;

namespace ChronoTrace.SourceGenerators.SourceGenerator;

internal class SourceGeneratorUtilities
{
    private const string HeaderTemplate = 
        """
        // <auto-generated>
        //
        // ╔════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
        // ║                                                                                                            ║
        // ║    This file was auto-generated by ChronoTrace.SourceGenerators                                            ║
        // ║                                                                                                            ║
        // ║    This file should not be edited! Manual changes may cause incorrect behavior and will be overwritten.    ║
        // ║                                                                                                            ║
        // ╠════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
        // ║    Generated: {0} UTC                                                                      ║
        // ╚════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
        //
        // </auto-generated>
        """;

    internal string MakeInterceptsLocationAttribute()
    {
        return FormatSourceCode(
            """
            namespace System.Runtime.CompilerServices;

            [global::System.Diagnostics.Conditional("DEBUG")]
            [global::System.AttributeUsage(global::System.AttributeTargets.Method, AllowMultiple = true, Inherited = false)]
            #pragma warning disable CS9113 // ignore warning thrown for unread parameters
            public sealed class InterceptsLocationAttribute(int version, string data) : global::System.Attribute;
            #pragma warning restore CS9113
            """);
    }

    internal string FormatCompilationUnitSyntax(CompilationUnitSyntax unit)
    {
        return FormatSourceCode(unit.NormalizeWhitespace().GetText(Encoding.UTF8).ToString());
    }
    
    private static string MakeHeader() => Format(HeaderTemplate, DateTime.UtcNow.ToString("yyyy-MM-dd HH:mm:ss"));

    private static string FormatSourceCode(string sourceCode) => 
        $"""
        {MakeHeader()}


        {sourceCode}
        """;
}