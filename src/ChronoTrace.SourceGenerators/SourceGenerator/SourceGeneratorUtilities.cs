using System.Text;
using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.CSharp.Syntax;
using static System.String;

namespace ChronoTrace.SourceGenerators.SourceGenerator;

/// <summary>
/// Provides utility methods for common tasks in Roslyn source generators,
/// such as generating standard file headers, defining necessary attributes,
/// and formatting generated C# source code.
/// </summary>
/// <remarks>
/// This class centralizes common formatting and boilerplate generation, ensuring
/// consistency across multiple generated source files.
/// </remarks>
internal class SourceGeneratorUtilities
{
    /// <summary>
    /// The template for the standard header prepended to all auto-generated source files.
    /// </summary>
    private const string HeaderTemplate = 
        """
        // <auto-generated>
        //
        // ╔════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
        // ║                                                                                                            ║
        // ║    This file was auto-generated by ChronoTrace.SourceGenerators                                            ║
        // ║                                                                                                            ║
        // ║    This file should not be edited! Manual changes may cause incorrect behavior and will be overwritten.    ║
        // ║                                                                                                            ║
        // ╠════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
        // ║    Generated: {0} UTC                                                                      ║
        // ╚════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
        //
        // </auto-generated>
        """;

    /// <summary>
    /// Generates the C# source code definition for the <c>System.Runtime.CompilerServices.InterceptsLocationAttribute</c>.
    /// This attribute is required for the C# Interceptors feature.
    /// </summary>
    /// <returns>A string containing the formatted C# source code for the attribute definition.</returns>
    internal string MakeInterceptsLocationAttribute()
    {
        return FormatSourceCode(
            """
            namespace System.Runtime.CompilerServices;

            [global::System.Diagnostics.Conditional("DEBUG")]
            [global::System.AttributeUsage(global::System.AttributeTargets.Method, AllowMultiple = true, Inherited = false)]
            #pragma warning disable CS9113 // ignore warning thrown for unread parameters
            public sealed class InterceptsLocationAttribute(int version, string data) : global::System.Attribute;
            #pragma warning restore CS9113
            """);
    }

    /// <summary>
    /// Formats a Roslyn <see cref="CompilationUnitSyntax"/> into a string representation
    /// with normalized whitespace and prepends the standard auto-generated file header.
    /// </summary>
    /// <param name="unit">The <see cref="CompilationUnitSyntax"/> representing the root of a C# source file.</param>
    /// <returns>A string containing the fully formatted C# source code, including the header.</returns>
    internal string FormatCompilationUnitSyntax(CompilationUnitSyntax unit)
    {
        return FormatSourceCode(unit.NormalizeWhitespace().GetText(Encoding.UTF8).ToString());
    }

    /// <summary>
    /// Prepends the standard auto-generated file header to the given source code string.
    /// </summary>
    /// <param name="sourceCode">The raw C# source code content.</param>
    /// <returns>The provided source code with the standard header added at the beginning.</returns>
    internal string FormatSourceCode(string sourceCode) => 
        $"""
         {MakeHeader()}


         {sourceCode}
         """;
    
    private static string MakeHeader() => Format(HeaderTemplate, DateTime.UtcNow.ToString("yyyy-MM-dd HH:mm:ss"));
}
